{"version":3,"sources":["Helpers/Helpers.js","Components/Form.js","Actions/loadAcion.js","Actions/loadingAction.js","Components/Errorbox.js","Components/LoadUser.js","Actions/errorAction.js","Components/modify.js","Components/Success.js","Reducers/errorReducer.js","Reducers/apiReducer.js","Reducers/loadingReducer.js","Reducers/rootReducer.js","store.js","App.js","index.js"],"names":["isEmail","email","RegExp","test","isPlz","word","isHausnr","Form","dispatch","useDispatch","useState","vorname","setvorname","nachname","setnachname","setemail","str","setstr","hausnr","sethausnr","plz","setplz","ort","setort","isFilled","buttonStyle","SuccessButton","className","onClick","localStorage","setItem","a","type","fetch","response","json","data","results","picture","large","payload","console","log","to","FailButton","Button","nbre","nnf","calc","icon","faUser","width","height","cx","cy","r","stroke","strokeDasharray","stroke-strokeDashoffset","stroke-width","fill","value","onChange","e","target","placeholder","Errorbox","error","useSelector","state","style","marginRight","faExclamationCircle","LoadUser","getItem","loading","load","background","backgroundImage","img","backgroundRepeat","backgroundPosition","backgroundSize","spinnerform","failSaveButton","successSaveButton","saveButton","failCancelButton","successCancelButton","cancelButton","disabled","Modify","validHausnr","validPlz","validemail","Success","display","justifyContent","alignItems","class","errorReducer","action","apiReducer","loadingReducer","combineReducers","errorreducer","loadReducer","store","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d083afa.chunk.js","sourcesContent":[" //this function is for checking whether the email valid or not\r\n export const isEmail=(email)=>{\r\n    const regex = new RegExp(`^\\\\w*(\\\\-\\\\w)?(\\\\.\\\\w*)?@\\\\w*(-\\\\w*)?\\\\.\\\\w{2,3}(\\\\.\\\\w{2,3})?$`);\r\n   \r\n    if(regex.test(email)) return true ;\r\n    else return false\r\n \r\n  }\r\n\r\n //this function is for checking whether a   word valid or not\r\n export  const isWord=(word)=>{\r\n    const regex = new RegExp(`^[a-zA-Z]{2,100}?$`);\r\n    return(regex.test(word))\r\n }\r\n//this function is for checking whether the PLZ valid (5 digits) or not\r\n export  const isPlz=(word)=>{\r\n   const regex = new RegExp(`^\\\\d\\\\d\\\\d\\\\d\\\\d$`);\r\n   return(regex.test(word))\r\n}\r\n//this function is for checking whether the Hausnr valid (2 digits) or not\r\nexport  const isHausnr=(word)=>{\r\n   const regex = new RegExp(`^\\\\d\\\\d`);\r\n   return(regex.test(word))\r\n}\r\n\r\n \r\n\r\n","import React, { useState,useEffect } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\r\n \r\nimport {validAction} from \"../Actions/errorAction\"\r\nimport {load} from \"../Actions/loadAcion\"\r\nimport {isEmail,isWord} from \"../Helpers/Helpers\"\r\nimport {useDispatch} from \"react-redux\"\r\nimport {Link} from \"react-router-dom\";\r\nexport default function Form() {\r\n\r\n\r\nconst dispatch = useDispatch();\r\n const [vorname, setvorname] = useState(\"\");\r\n const [nachname, setnachname] = useState(\"\");\r\n const [email, setemail] = useState(\"\");\r\n const [str, setstr] = useState(\"\");\r\n const [hausnr, sethausnr] = useState(\"\");\r\n const [plz, setplz] = useState(\"\");\r\n const [ort, setort] = useState(\"\");\r\n const [percentage,setpercentage] = useState(0)\r\n\r\n  \r\n // this function is for checking wether all the inputs are filled or not\r\n  const isFilled=()=>{\r\n  return (vorname !==\"\" && \r\n          nachname !==\"\" && \r\n          email !==\"\" && \r\n          str !==\"\" && \r\n          hausnr !==\"\" && \r\n          plz !==\"\")&& \r\n          ort!==\"\"\r\n }\r\n\r\n\r\n\r\n//this fuction calculates the pourcentage of the filled inputs\r\n const calc=()=>{\r\n    var nnf=0\r\n    if(vorname !==\"\" ){nnf+=1}\r\n    if(nachname !==\"\" ){nnf+=1}\r\n    if(email !==\"\" ){nnf+=1}\r\n    if(ort !==\"\" ){nnf+=1}\r\n    if(plz !==\"\" ){nnf+=1}\r\n    if(hausnr !==\"\" ){nnf+=1}\r\n    if(str !==\"\" ){nnf+=1}\r\n    return nnf ;\r\n }\r\n  \r\n\r\n // this part is for handling the input in every input field\r\n const handelVorname=(e)=>{\r\n    setvorname(e.target.value);\r\n     \r\n}\r\nconst handelNachname=(e)=>{\r\n    setnachname(e.target.value);\r\n   \r\n}\r\nconst handelStr=(e)=>{\r\n    setstr(e.target.value);\r\n    \r\n}\r\nconst handelHausnr=(e)=>{\r\n    sethausnr(e.target.value);\r\n    \r\n}\r\nconst handelPlz=(e)=>{\r\n    setplz(e.target.value);\r\n     \r\n}\r\nconst handelOrt=(e)=>{\r\n    setort(e.target.value);\r\n  \r\n}\r\nconst handelEmail=(e)=>{\r\n    setemail(e.target.value);\r\n     \r\n}\r\n\r\n// this function is for the generation of user\r\n\r\nconst generateUser=()=> {\r\n    \r\n       // Save the input data in the local storage\r\n        localStorage.setItem(\"vorname\",vorname);\r\n        localStorage.setItem(\"nachname\",nachname);\r\n        localStorage.setItem(\"email\",email);\r\n        localStorage.setItem(\"str\",str);\r\n        localStorage.setItem(\"hausnr\",hausnr);\r\n        localStorage.setItem(\"plz\",plz);\r\n        localStorage.setItem(\"ort\",ort);  \r\n      // Dispatching the Load action\r\n       dispatch(load())\r\n\r\n    \r\n    \r\n     \r\n}\r\n\r\n// this part is for the inline Styling of the button\r\nconst buttonStyle= isFilled()?\"btn btn-enabled\":\"btn btn-disabled\"\r\n  \r\n//this part is for the different form of the User generation button  in terms of the different scenarios \r\n const SuccessButton =  <Link className={buttonStyle} onClick={generateUser} to=\"loaduser\">User generieren</Link>\r\n  const FailButton =   <div className={buttonStyle}>User generieren</div>\r\n//  const FailButton =   <div className={buttonStyle} onClick={()=>dispatch(errorAction())}>User generieren</div>\r\n\r\n const Button = isFilled()?SuccessButton:FailButton\r\n\r\n const nbre = calc()\r\n \r\n \r\n    return (\r\n       \r\n    \r\n    <div className=\"\">\r\n \r\n \r\n        <div className=\"form\">\r\n            <div className=\"avatar-box\">\r\n     \r\n \r\n            <div  className=\"avatar-circle\">\r\n               <i className=\"avatar-img\"><FontAwesomeIcon  icon={faUser}/></i>\r\n              <div className=\"svg-container\">\r\n              <svg  className=\"circle\" width=\"222px\" height=\"222px\">\r\n                \r\n  \r\n   \r\n  <circle   cx=\"100\" cy=\"100\" r=\"97\" stroke=\"#10AC84\" strokeDasharray={`${614*(nbre/10)} 614 ` } stroke-strokeDashoffset=\"200\"  stroke-width=\"7\" fill=\"transparent\" />\r\n</svg>\r\n              </div>\r\n        </div> \r\n        {nbre>0&&<p className=\"percentage\">{`${nbre*10}%`}</p>}\r\n \r\n            </div>\r\n        \r\n                 \r\n          \r\n           <div className=\"inputs\"> \r\n           <div className=\"row grid\">\r\n          <input  className={`filled-${isWord(vorname)} add-input`} type=\"text\" value={vorname} onChange={handelVorname}  placeholder=\"Vorname\"/>\r\n          <input type=\"text\" className=\"add-input\"  value={nachname} onChange={handelNachname} placeholder=\"Nachname\"/>\r\n          </div>\r\n          \r\n         <div className=\"row\">\r\n           <input  className=\"email  add-input\" type=\"text\" value={email} onChange={handelEmail} placeholder=\"Email\"/>\r\n         </div>\r\n          <div className=\"row grid third\">\r\n          <input type=\"text\" className=\"add-input\"  value={str} onChange={handelStr} placeholder=\"Straße\"/>\r\n          <input type=\"text\" className=\"add-input\" value={hausnr} onChange={handelHausnr} placeholder=\"Hsnr.\"/>\r\n          </div>\r\n          <div className=\"row grid fourth\">\r\n          <input type=\"text\"  className=\"add-input\" value={plz} onChange={handelPlz} placeholder=\"PLZ\"/>\r\n          <input type=\"text\"  className=\"add-input\" value={ort} onChange={handelOrt} placeholder=\"Ort\"/>\r\n           \r\n          </div>\r\n     \r\n             {Button}\r\n           </div>\r\n          \r\n        </div>\r\n\r\n    </div>\r\n\r\n        \r\n      \r\n    )\r\n}\r\n","\r\n//this action is for loading the image from the Api\r\n\r\nimport { loadingTrue } from \"./loadingAction\";\r\nimport { loadingFalse } from \"./loadingAction\";\r\n\r\nexport const load= () => async  dispatch =>{\r\n \r\n     dispatch(loadingTrue())\r\n   try{\r\n    const response= await fetch(\"https://randomuser.me/api\");\r\n    const json = await response.json();\r\n    const data = json.results[0].picture\r\n    localStorage.setItem(\"img\",data.large)\r\n   \r\n   \r\n    dispatch(\r\n        {\r\n            type: \"load\",\r\n            payload:data.large\r\n       \r\n        }\r\n    )} catch(err){\r\n    console.log(err)\r\n   }\r\n   dispatch(loadingFalse())\r\n    }\r\n","//the Loading action is for determinating whether the data are loaded or not\r\n\r\nexport const  loadingTrue = ()=>{\r\n\r\n    return {\r\n        type: \"loading\"\r\n    }\r\n}\r\nexport const loadingFalse = ()=>{\r\n\r\n    return {\r\n        type: \"loaded\"\r\n    }\r\n}","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport {useSelector} from \"react-redux\" ;\r\n \r\nexport default function Errorbox() {\r\n    const error = useSelector(state=>state.error)\r\n    return (\r\n        <div className={`errorBox Display-${error}`}>\r\n            <span style={{marginRight:\"8px\"}}>\r\n              <FontAwesomeIcon icon={faExclamationCircle}/>\r\n            </span> \r\n               <p>Bitte Korrigieren Sie die markierten Eingabfelder</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport {errorAction} from \"../Actions/errorAction\"\r\n import {isEmail,isPlz,isHausnr} from \"../Helpers/Helpers\"\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch,useSelector} from \"react-redux\"\r\nimport \"./spinner.css\"\r\nexport default function LoadUser() {\r\n\r\n\r\nconst dispatch = useDispatch();\r\n const [vorname, setvorname] = useState(localStorage.getItem(\"vorname\"));\r\n const [nachname, setnachname] = useState(localStorage.getItem(\"nachname\"));\r\n const [email, setemail] = useState(localStorage.getItem(\"email\"));\r\n const [str, setstr] = useState(localStorage.getItem(\"str\"));\r\n const [hausnr, sethausnr] = useState(localStorage.getItem(\"hausnr\"));\r\n const [plz, setplz] = useState(localStorage.getItem(\"plz\"));\r\n const [ort, setort] = useState(localStorage.getItem(\"ort\"));\r\n const [error,seterror] = useState(false)\r\n\r\n \r\n \r\n \r\n\r\n // getting the load state from the Redux store\r\n const loading = useSelector(state=>state.load)\r\n // getting the random img fetched from the get API\r\n  const img = useSelector(state=>state.img)\r\n\r\n  // Styling the image in the avatar\r\n  const background={\r\n    backgroundImage: \"url(\" + img + \")\",\r\n    backgroundRepeat  : 'no-repeat',\r\n     backgroundPosition: 'center',\r\n     backgroundSize: 'cover' \r\n  }\r\n// intialising the spinner\r\nconst spinnerform =loading?\"spinnerform\":\"\";\r\n \r\nconst failSaveButton =   <Link className=\"btn-2\" to=\"modify\" onClick={()=>dispatch(errorAction())}>User Anlegen</Link>\r\nconst successSaveButton =   <Link className=\"btn-2\" to=\"success\" >User Anlegen</Link>\r\n const saveButton= isHausnr(hausnr)&&isEmail(email)&&isPlz(plz)?successSaveButton:failSaveButton\r\n\r\n\r\n\r\n const failCancelButton = <Link to=\"modify\" className=\"btn-3\"  onClick={()=>dispatch(errorAction())}>Bearbeiten</Link>\r\n const successCancelButton =   <Link to=\"modify\" className=\"btn-3\">Bearbeiten</Link>\r\n  const cancelButton= isHausnr(hausnr)&&isEmail(email)&&isPlz(plz)?successCancelButton:failCancelButton\r\n\r\n    return (\r\n       \r\n               \r\n        <div className={`form ${spinnerform}`}>\r\n\r\n         {loading&&( <div className=\"spinner\"> </div>)}\r\n          \r\n         {!loading&&(\r\n\r\n\r\n        <div >\r\n\r\n \r\n\r\n<div className=\"avatar-box\">\r\n               <div style={background} className=\"avatar-circle\">\r\n              \r\n               </div>\r\n           </div>\r\n           <div className=\"inputs\"> \r\n           <div className=\"row grid\">\r\n          <input    value={vorname} className=\"add-input\"   placeholder=\"Vorname\" disabled/>\r\n          <input type=\"text\"   value={nachname} className=\"add-input\"   placeholder=\"Nachname\" disabled/>\r\n          </div>\r\n          \r\n         <div className=\"row\">\r\n           <input  className=\"email add-input\"    value={email}  placeholder=\"Email\" disabled/>\r\n         </div>\r\n          <div className=\"row grid third\">\r\n          <input type=\"text\"    className=\"add-input\"  value={str} placeholder=\"Straße\" disabled/>\r\n          <input type=\"text\" className=\"add-input\"  value={hausnr}   placeholder=\"Hsnr.\" disabled />\r\n          </div>\r\n          <div className=\"row grid fourth\">\r\n          <input type=\"text\" className=\"add-input\"    value={plz}  placeholder=\"PLZ\" disabled />\r\n          <input type=\"text\" className=\"add-input\"    value={ort}  placeholder=\"Ort\" disabled />\r\n          </div>\r\n          <div className=\"row grid fifth\">\r\n           {cancelButton}\r\n           {saveButton}\r\n          </div>\r\n          </div>\r\n           </div>\r\n )}\r\n        </div>\r\n       \r\n      \r\n    )\r\n}\r\n","//this action is for changing the error state , an error occurs when one or many inputsare not valid\r\n\r\nexport const  errorAction = ()=>{\r\n\r\n    return {\r\n        type: \"error\"\r\n    }\r\n}\r\nexport const validAction = ()=>{\r\n\r\n    return {\r\n        type: \"valid\"\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport {validAction} from \"../Actions/errorAction\"\r\nimport {useDispatch} from \"react-redux\"\r\nimport {isEmail,isPlz,isHausnr} from \"../Helpers/Helpers\"\r\nimport {Link} from \"react-router-dom\";\r\nimport {errorAction} from \"../Actions/errorAction\"\r\nexport default function Modify() {\r\n\r\n\r\nconst dispatch = useDispatch();\r\n const [vorname, setvorname] = useState(localStorage.getItem(\"vorname\"));\r\n const [nachname, setnachname] = useState(localStorage.getItem(\"nachname\"));\r\n const [email, setemail] = useState(localStorage.getItem(\"email\"));\r\n const [str, setstr] = useState(localStorage.getItem(\"str\"));\r\n const [hausnr, sethausnr] = useState(localStorage.getItem(\"hausnr\"));\r\n const [plz, setplz] = useState(localStorage.getItem(\"plz\"));\r\n const [ort, setort] = useState(localStorage.getItem(\"ort\"));\r\n const [error,seterror] = useState(false)\r\n\r\n \r\n const img = localStorage.getItem(\"img\")\r\n const background={\r\n  backgroundImage: \"url(\" + img + \")\",\r\n  backgroundRepeat  : 'no-repeat',\r\n   backgroundPosition: 'center',\r\n   backgroundSize: 'cover' \r\n}\r\n\r\n // this part is for handling the input in every input field\r\n const handelVorname=(e)=>{\r\n  setvorname(e.target.value);\r\n   \r\n}\r\nconst handelNachname=(e)=>{\r\n  setnachname(e.target.value);\r\n \r\n}\r\nconst handelStr=(e)=>{\r\n  setstr(e.target.value);\r\n  \r\n}\r\nconst handelHausnr=(e)=>{\r\n  sethausnr(e.target.value);\r\n  \r\n}\r\nconst handelPlz=(e)=>{\r\n  setplz(e.target.value);\r\n   \r\n}\r\nconst handelOrt=(e)=>{\r\n  setort(e.target.value);\r\n\r\n}\r\nconst handelEmail=(e)=>{\r\n  setemail(e.target.value);\r\n   \r\n}\r\n\r\n\r\nconst save=()=> {\r\n    \r\n    \r\n  localStorage.setItem(\"vorname\",vorname);\r\n  localStorage.setItem(\"nachname\",nachname);\r\n  localStorage.setItem(\"email\",email);\r\n  localStorage.setItem(\"str\",str);\r\n  localStorage.setItem(\"hausnr\",hausnr);\r\n  localStorage.setItem(\"plz\",plz);\r\n  localStorage.setItem(\"ort\",ort);  \r\n\r\n dispatch(validAction())\r\n\r\n\r\n\r\n\r\n}\r\n \r\n\r\n \r\n\r\n  const validHausnr=isHausnr(hausnr)?\"valid\":\"invalid\";\r\n   const validPlz=isPlz(plz)?\"valid\":\"invalid\";\r\n   const validemail=isEmail(email)?\"valid\":\"invalid\";\r\n\r\n\r\n \r\n   const failSaveButton =   <Link className=\"btn-2\" to=\"modify\" onClick={()=>dispatch(errorAction())}>Speichern</Link>\r\n   const successSaveButton =   <Link className=\"btn-2\" to=\"loaduser\"    onClick={save} >Speichern</Link>\r\n    const saveButton= isHausnr(hausnr)&&isEmail(email)&&isPlz(plz)?successSaveButton:failSaveButton\r\n \r\n    return (\r\n       \r\n               \r\n        <div className=\"form\">\r\n        \r\n        <div className=\"avatar-box\">\r\n               <div  style={background} className=\"avatar-circle\">\r\n                \r\n               </div>\r\n           </div>\r\n           <div className=\"inputs\"> \r\n           <div className=\"row grid\">\r\n          <input  className=\"input-modify\"  value={vorname}  onChange={handelVorname}  placeholder=\"Vorname\" />\r\n          <input type=\"text\"  className=\"input-modify\" value={nachname} onChange={handelNachname}  placeholder=\"Nachname\"/>\r\n          </div>\r\n          \r\n         <div className=\"row\">\r\n           <input  className={`email input-modify ${validemail}`}   value={email}  onChange={handelEmail} placeholder=\"Email\" />\r\n         </div>\r\n          <div className=\"row grid third\">\r\n          <input type=\"text\"   className=\"input-modify\"  onChange={handelStr} value={str} placeholder=\"Straße\"/>\r\n          <input type=\"text\"  className={`input-modify ${validHausnr}`} value={hausnr} onChange={handelHausnr}  placeholder=\"Hsnr.\" />\r\n          </div>\r\n          <div className=\"row grid fourth\">\r\n          <input type=\"text\"   className={`input-modify ${validPlz}`} onChange={handelPlz} value={plz}  placeholder=\"PLZ\"  />\r\n          <input type=\"text\"   className=\"input-modify\"  value={ort} onChange={handelOrt}  placeholder=\"Ort\"  />\r\n          </div>\r\n          <div className=\"row grid fifth\">\r\n          <Link className=\"btn-3\" to=\"loaduser\" onClick={()=>dispatch(validAction())}>Abrechen</Link>\r\n         {saveButton}\r\n          </div>\r\n         \r\n         \r\n    \r\n          \r\n           </div>\r\n         \r\n        </div>\r\n      \r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./sucess.css\"\r\n\r\nexport default function Success() {\r\n    return (\r\n       \r\n        <div style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}} >\r\n    \r\n<div class=\"success-checkmark\">\r\n  <div class=\"check-icon\">\r\n    <span class=\"icon-line line-tip\"></span>\r\n    <span class=\"icon-line line-long\"></span>\r\n    <div class=\"icon-circle\"></div>\r\n    <div class=\"icon-fix\"></div>\r\n  </div>\r\n</div>\r\n \r\n            </div >\r\n\r\n       )  \r\n    \r\n}\r\n","const errorReducer = (state=false,action)=>{\r\n\r\n   switch(action.type){\r\n       case \"error\": return state=true ;\r\n       case \"valid\": return state=false;\r\n       default: return state ;\r\n  }\r\n\r\n}\r\n\r\nexport default errorReducer ;","const apiReducer =  (img=null,action)=>{\r\n  \r\n     switch(action.type){\r\n        case \"load\": \r\n          \r\n        return action.payload\r\n         default: return img ;\r\n   }\r\n \r\n}\r\nexport default apiReducer ;","const loadingReducer = (state=true,action)=>{\r\n\r\n    switch(action.type){\r\n        case \"loading\": return state=true ;\r\n        case \"loaded\": return state=false;\r\n        default: return state ;\r\n   }\r\n \r\n }\r\n \r\n export default loadingReducer ;","import {combineReducers,} from \"redux\" ;\r\nimport errorreducer from \"./errorReducer\"\r\nimport apiReducer from \"./apiReducer\"\r\nimport loadReducer from \"./loadingReducer\"\r\n\r\nexport default combineReducers({\r\n\r\n    error: errorreducer,\r\n    img : apiReducer,\r\n    load: loadReducer\r\n}) ;\r\n","import {createStore,applyMiddleware,compose} from \"redux\" ;\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from \"./Reducers/rootReducer\"\r\nconst store = createStore(rootReducer,compose(applyMiddleware(thunk),window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()))\r\n\r\nexport default store ;","import React from 'react';\r\n import './App.css';\r\n\r\n import Form from \"./Components/Form\"\r\n import ErrorBox from \"./Components/Errorbox\"\r\n import LoadUser from \"./Components/LoadUser\"\r\n import Modify from \"./Components/modify\"\r\n import Success from \"./Components/Success\"\r\n import store from \"./store\";\r\n\r\n import {Provider} from \"react-redux\"\r\n import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <Provider store={store}>\r\n      <div className=\"App\">\r\n       <ErrorBox/>\r\n   \r\n   \r\n\r\n       <Switch>\r\n            \r\n          <Route path=\"/loaduser\">\r\n          <LoadUser/>\r\n          </Route>\r\n          \r\n           <Route path=\"/modify\">\r\n           <Modify/> \r\n           </Route> \r\n           \r\n           <Route path=\"/success\">\r\n           <Success/> \r\n           </Route>\r\n           <Route path=\"/\">\r\n           <Form/> \r\n           </Route>\r\n        </Switch>\r\n\r\n\r\n\r\n    </div>\r\n    </Provider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n \r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n \r\n"],"sourceRoot":""}